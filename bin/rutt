#!/usr/bin/env ruby
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'rubygems'
require 'launchy'
require 'ncurses'
require 'nokogiri'
require 'open-uri'
require 'optparse'
require 'rss/1.0'
require 'rss/2.0'
require 'sqlite3'
require 'feedparser'
require 'parallel'
require 'instapaper'
require 'oauth'
require 'readability'
require 'open-uri'

require 'rutt'

$db = SQLite3::Database.new('rutt.db')
$db.results_as_hash = true

def start_screen
  stdscr = Ncurses.initscr()

  Ncurses.start_color();
  Ncurses.cbreak();
  Ncurses.noecho();
  Ncurses.keypad(stdscr, true);

  stdscr.clear

  feed_screen = Rutt::Screen::Feed.new(stdscr)
  feed_screen.loop
ensure
  Ncurses.endwin()
end


def main

  Rutt::DB::Config.make_table!
  Rutt::DB::Feed.make_table!
  Rutt::DB::Item.make_table!

  options = {}
  OptionParser.new do |opts|
    opts.banner = "Usage: rutt.rb [options]"

    opts.on('-a', '--add FEED', "Add a feed") do |url|
      Rutt::DB::Feed::add(url)
      exit
    end

    opts.on('-r', '--refresh', "Refresh feeds.") do
      Rutt::DB::Feed::refresh
      exit
    end

    opts.on('-o', '--import-opml FILE', "Import opml") do |file|
      urls = Rutt::Opml::get_urls(file)

      urls.each do |url|
        puts "Adding #{url}"
        Rutt::DB::Feed::add(url, false)
      end

      exit
    end

    opts.on('-s', '--set-key', "Set config") do |key, value|
      Rutt::DB::Config.set(ARGV[0], ARGV[1])
      exit
    end

#    opts.on('-l', '--list-feeds', action='store_true', help="List the feeds")

  end.parse!

  consumer_key    = Rutt::DB::Config.get("instapaper.consumer-key")
  consumer_secret = Rutt::DB::Config.get("instapaper.consumer-secret")
  username        = Rutt::DB::Config.get("instapaper.username")
  password        = Rutt::DB::Config.get("instapaper.password")

  $instapaper = Rutt::Instapaper::API.new(consumer_key, consumer_secret)
  $instapaper.authorize(username, password)

  start_screen
end

main
